{"version":3,"file":"static/js/191.85a6c275.chunk.js","mappings":"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","sources":["api/api.js","components/FindForm/index.jsx","components/Movies/index.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\n// npm i axios\n// npm i notiflix\n// npm install react-router-dom\n\n//eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MTkyMWRkYzRjZDhjZjUyODE4ZTMwNmFiM2U0OTk2YSIsInN1YiI6IjY1NjQ1NWQyN2RmZGE2NTkzMDRjNDcwNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ndAqmE3xxQaeU7y34bJAU7IErqXNVjvShsnsEpx0nMY\n//key API =61921ddc4cd8cf52818e306ab3e4996a\n\n// https://api.themoviedb.org/3/trending/all/day\n//https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nclass Api {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #KEY_API = '61921ddc4cd8cf52818e306ab3e4996a';\n\n  async getData(url) {\n    const response = await axios.get(url);\n    return response.data;\n  }\n\n  handleError(error) {\n    Notiflix.Notify.failure(error.response.data.message);\n  }\n\n  async getMovieReviews(movId) {\n    try {\n      return await this.getData(\n        `${this.#BASE_URL}/movie/${movId}/reviews?language=en-US&api_key=${\n          this.#KEY_API\n        }`\n      );\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  async getMovieCredits(movId) {\n    try {\n      return await this.getData(\n        `${this.#BASE_URL}/movie/${movId}/credits?language=en-US&api_key=${\n          this.#KEY_API\n        }`\n      );\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  async getMovieDetail(movId) {\n    try {\n      return await this.getData(\n        `${this.#BASE_URL}movie/${movId}?language=en-US&api_key=${\n          this.#KEY_API\n        }`\n      );\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  async getSearch(params, page) {\n    try {\n      return await this.getData(\n        `${this.#BASE_URL}/search/movie?api_key=${\n          this.#KEY_API\n        }&query=${params}&include_adult=false&language=en-US&page=${page}`\n      );\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  async getTrend() {\n    try {\n      return await this.getData(\n        `${this.#BASE_URL}trending/all/day?api_key=${this.#KEY_API}`\n      );\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n}\n\nconst api = new Api();\nexport default api;\n","import api from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport React from 'react';\n\nconst FindForm = () => {\n  const [listSearch, setListSearch] = useState([]);\n  const [page, setPage] = useState(1);\n  // const [totalPages, setTotalPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  // const page = searchParams.get('page');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query)\n      api.getSearch(query, page).then(data => {\n        // console.log('Search ', data);\n        setListSearch(prev => [...data.results]);\n        setPage(prev => prev++);\n        // setTotalPages(data.total_pages);\n      });\n  }, [query, page]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.searchInput.value });\n    // console.log('value', e.target.searchInput.value);\n  };\n\n  return (\n    <>\n      <form className=\"searchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"searchForm-button\">\n          <span className=\"button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"searchForm-input\"\n          type=\"text\"\n          name=\"searchInput\"\n          // value={query ? query.toString() : ''}\n          placeholder=\"Search films\"\n          // onChange={e => setSearchParams({ query: e.target.value })}\n        />\n      </form>\n      <ul>\n        {listSearch.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {/* {totalPages > page && (\n        <Link to={`/movies?query=${query}&page=${page}`}>Load more</Link>\n      )} */}\n    </>\n  );\n};\n\nexport default FindForm;\n","import FindForm from 'components/FindForm';\nimport React from 'react';\n// import { useNavigate, useSearchParams } from 'react-router-dom';\n\nconst Movies = ({ onSubmit }) => {\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  return (\n    <header className=\"searchbar\">\n      <FindForm />\n    </header>\n  );\n};\n\nexport default Movies;\n"],"names":["_BASE_URL","_classPrivateFieldLooseKey","_KEY_API","constructor","Object","defineProperty","writable","value","getData","url","axios","get","data","handleError","error","Notiflix","failure","response","message","getMovieReviews","movId","this","concat","_classPrivateFieldLooseBase","getMovieCredits","getMovieDetail","getSearch","params","page","getTrend","FindForm","listSearch","setListSearch","useState","setPage","searchParams","setSearchParams","useSearchParams","query","location","useLocation","useEffect","api","then","prev","results","_jsxs","_Fragment","children","className","onSubmit","e","preventDefault","target","searchInput","_jsx","type","name","placeholder","map","movie","Link","to","id","state","from","title","_ref"],"sourceRoot":""}